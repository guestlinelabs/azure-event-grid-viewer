trigger:
  branches:
    include:
    - main
  paths:
    include:
    - viewer/*

variables:
  BuildConfiguration: 'Release'
  ProjectPath: '**/*.csproj'

jobs:
- job: 'Default'
  displayName: 'Build Web App'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
    - task: DotNetCoreCLI@2
      displayName: 'Build web project'
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'
        projects: $(ProjectPath)
        
    - task: DotNetCoreCLI@2
      displayName: 'Publish'
      inputs:
        command: publish
        publishWebProjects: False
        projects: $(ProjectPath)
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory/app)'
        zipAfterPublish: True
        
    - task: PublishBuildArtifacts@1
      displayName: 'Publish'
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/app'
        artifactName: 'viewer'
        publishLocation: 'Container'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))

    - task: CopyFiles@2
      displayName: Copy Files
      inputs:
        Contents: 'viewer/eventgridsubscription/*.json'
        TargetFolder: $(build.ArtifactStagingDirectory)/sub
  
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        pathtoPublish: '$(build.ArtifactStagingDirectory)/sub'
        artifactName: 'subscription'
        publishLocation: 'Container'
...